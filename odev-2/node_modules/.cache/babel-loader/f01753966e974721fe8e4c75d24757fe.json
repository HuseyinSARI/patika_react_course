{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\denemeler\\\\patika_react_course\\\\odev-2\\\\src\\\\components\\\\List\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List(_ref) {\n  _s();\n\n  let {\n    todos,\n    setTodos,\n    hide\n  } = _ref;\n  const [flag, setFlag] = useState(false);\n  const [form, setForm] = useState(\"\"); // formdaki değişiklileri tutmak ve işlem yapmak için state oluşturduk.\n\n  const onSubmit = e => {\n    // form gönderirken yapılacak işlemer\n    e.preventDefault();\n\n    if (form === \"\") {\n      // boş form göndermesini engelledik\n      return false;\n    }\n\n    setTodos([...todos, {\n      id: todos.length > 0 ? todos[todos.length - 1].id + 1 : 0,\n      // yeni eklenin id si = son eklenenin id si + 1\n      todo: form,\n      checked: false\n    }]);\n    setForm(\"\"); // gönderdikten sonra formda kalan verileri temizlemek için\n  };\n\n  const isCompleted = e => {\n    if (e.checked === true && hide === \"All\") {\n      //footer kısmında set edilen hide state ine göre list deki elemanların görünürlüğünü düzenliyor\n      return \"completed\";\n    } else if (e.checked === true && hide === \"Active\") {\n      return \"completed hidden\";\n    } else if (e.checked === false && hide === \"Completed\") {\n      return \"hidden\";\n    }\n  };\n\n  const checkTodo = e => {\n    // bütün todos lar içerisinde dönerek id si seçilen id ye eşit olan todos u buluyor\n    const addTodos = todos.map(todo => {\n      // checked değişkenini true ise false, false ise tru yapıyor ve  setTodos ile geri setliyor\n      if (parseInt(todo.id) === parseInt(e.target.id)) {\n        return { ...todo,\n          checked: !todo.checked\n        };\n      }\n\n      return todo;\n    });\n    setTodos(addTodos);\n  };\n\n  const checkAll = () => {\n    if (flag) {\n      const allTodos = todos.map(todo => {\n        return { ...todo,\n          checked: true\n        };\n      });\n      setFlag(!flag);\n      setTodos(allTodos);\n    } else {\n      const allTodos = todos.map(todo => {\n        return { ...todo,\n          checked: false\n        };\n      });\n      setFlag(!flag);\n      setTodos(allTodos);\n    }\n\n    console.log(\"tıklandı flag:\", flag);\n  };\n\n  const deleteTodo = e => {\n    setTodos(todos.filter(todo => parseInt(todo.id) !== parseInt(e.target.id)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"toggle-all\",\n      type: \"checkbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"toggle-all\",\n      onClick: checkAll,\n      children: \" Mark all as complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        id: todo.id,\n        className: `${isCompleted(todo)}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"toggle\",\n            type: \"checkbox\",\n            defaultChecked: todo.checked,\n            checked: todo.checked,\n            id: todo.id,\n            onClick: checkTodo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: todo.todo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: onSubmit,\n            children: [\"    \", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"new-todo\",\n              placeholder: \"What needs to be done?\",\n              autoFocus: true,\n              value: form,\n              onChange: e => setForm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 18\n            }, this), \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"destroy\",\n            id: todo.id,\n            onClick: deleteTodo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"QUjChBhZ7EeU3rkamat9+9OyY+g=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["useState","List","todos","setTodos","hide","flag","setFlag","form","setForm","onSubmit","e","preventDefault","id","length","todo","checked","isCompleted","checkTodo","addTodos","map","parseInt","target","checkAll","allTodos","console","log","deleteTodo","filter","value"],"sources":["C:/xampp/htdocs/denemeler/patika_react_course/odev-2/src/components/List/index.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction List({ todos, setTodos, hide }) {\r\n\r\nconst [flag, setFlag] = useState(false);\r\n\r\nconst [form, setForm] = useState(\"\");    // formdaki değişiklileri tutmak ve işlem yapmak için state oluşturduk.\r\n\r\nconst onSubmit = (e) => {  // form gönderirken yapılacak işlemer\r\n  e.preventDefault();     \r\n\r\n  if (form === \"\") {    // boş form göndermesini engelledik\r\n    return false;\r\n  }\r\n\r\n  setTodos([...todos,{\r\n                          id: todos.length > 0 ? todos[todos.length - 1].id + 1 : 0,     // yeni eklenin id si = son eklenenin id si + 1\r\n                          todo: form,\r\n                          checked: false,\r\n                      },\r\n  ]);\r\n\r\n  setForm(\"\");  // gönderdikten sonra formda kalan verileri temizlemek için\r\n \r\n};\r\n\r\n\r\n  const isCompleted = (e) => {\r\n    if (e.checked === true && hide === \"All\") {                 //footer kısmında set edilen hide state ine göre list deki elemanların görünürlüğünü düzenliyor\r\n      return \"completed\";\r\n    } else if (e.checked === true && hide === \"Active\") {\r\n      return \"completed hidden\";\r\n    } else if (e.checked === false && hide === \"Completed\") {\r\n      return \"hidden\";\r\n    }\r\n  };\r\n\r\n  const checkTodo = (e) => {                                  // bütün todos lar içerisinde dönerek id si seçilen id ye eşit olan todos u buluyor\r\n    const addTodos = todos.map((todo) => {                      // checked değişkenini true ise false, false ise tru yapıyor ve  setTodos ile geri setliyor\r\n      if (parseInt(todo.id) === parseInt(e.target.id)) {\r\n        return { ...todo, checked: !todo.checked };\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(addTodos);\r\n  };\r\n\r\n\r\n  const checkAll = () => {   \r\n    \r\n    if(flag){\r\n        const allTodos = todos.map((todo) => {        \r\n            return {...todo, checked :true } \r\n        });\r\n        setFlag(!flag)\r\n        setTodos(allTodos);\r\n\r\n    }else{\r\n        const allTodos = todos.map((todo) => {        \r\n            return {...todo, checked :false } \r\n        });\r\n        setFlag(!flag)\r\n        setTodos(allTodos);\r\n    }\r\n    \r\n    console.log(\"tıklandı flag:\" , flag);\r\n\r\n\r\n    \r\n  };\r\n\r\n  const deleteTodo = (e) => {\r\n    setTodos(\r\n      todos.filter((todo) => parseInt(todo.id) !== parseInt(e.target.id))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <input className=\"toggle-all\"  type=\"checkbox\"   />\r\n      <label htmlFor=\"toggle-all\" onClick={checkAll}> Mark all as complete</label>\r\n\r\n      <ul className=\"todo-list\">\r\n        {todos.map((todo) => (\r\n          <li key={todo.id} id={todo.id} className={`${isCompleted(todo)}`}>\r\n            <div>\r\n\r\n              <input\r\n                className=\"toggle\"\r\n                type=\"checkbox\"\r\n                defaultChecked={todo.checked}\r\n                checked = {todo.checked}\r\n                id={todo.id}\r\n                onClick={checkTodo}\r\n              />\r\n\r\n              {/* <label>{todo.todo}</label> */}\r\n\r\n              <input type=\"text\" value={todo.todo} />\r\n\r\n              <form onSubmit={onSubmit}>    {/* formdan veriyi gönderirken çalışan metod */}\r\n                 <input className=\"new-todo\" placeholder=\"What needs to be done?\" autoFocus value={form} onChange={(e) => setForm(e.target.value)} />  {/* formdan veriyi state e atar */}\r\n              </form>\r\n\r\n              <button\r\n                className=\"destroy\"\r\n                id={todo.id}\r\n                onClick={deleteTodo}\r\n              ></button>\r\n\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}